<Window x:Class="CraftHub.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewModels="clr-namespace:CraftHub.ViewModels"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CraftHub"
        mc:Ignorable="d"
        Title="CraftHub"
        x:Name="MyMainWindow"
        MinHeight="450"
        MinWidth="850"
        WindowStyle="None"
        FontFamily="{DynamicResource MontserratFont}"
        SourceInitialized="Window_SourceInitialized"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <!-- Styles -->
        <Style x:Key="MaterialDesignIconButton"
               TargetType="Button">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Foreground"
                    Value="{DynamicResource MaterialDesignBody}" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Padding"
                    Value="8" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Data templates -->
        <DataTemplate x:Key="MenuItemHeaderTemplate">
            <TextBlock Text="{Binding}"
                       VerticalAlignment="Center" />
        </DataTemplate>

        <!-- Menu item style -->
        <Style x:Key="MenuItemStyle"
               TargetType="MenuItem">
            <Setter Property="HeaderTemplate"
                    Value="{StaticResource MenuItemHeaderTemplate}" />
        </Style>
    </Window.Resources>

    <Window.DataContext>
        <viewModels:MainWindowViewModel />
    </Window.DataContext>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="30"
                      CornerRadius="5"
                      GlassFrameThickness="0"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>

    <DockPanel x:Name="RootWindow"
               LastChildFill="True">
        <DockPanel x:Name="TitleBar"
                   DockPanel.Dock="Top"
                   Height="35">
            <Button x:Name="CloseButton"
                    Command="{Binding CloseWindowCommand}"
                    CommandParameter="{Binding ElementName=MyMainWindow}"
                    Style="{StaticResource MaterialCloseButtonStyle}">
                <Button.Content>
                    <materialDesign:PackIcon Kind="Close" />
                </Button.Content>
            </Button>
            <Button x:Name="MaxButton"
                    Command="{Binding MaximizeWindowCommand}"
                    CommandParameter="{Binding ElementName=MyMainWindow}"
                    Style="{StaticResource MaterialButtonStyle}">
                <Button.Content>
                    <materialDesign:PackIcon Kind="WindowMaximize" />
                </Button.Content>
            </Button>
            <Button x:Name="MinButton"
                    Command="{Binding MinimizeWindowCommand}"
                    CommandParameter="{Binding ElementName=MyMainWindow}"
                    Style="{StaticResource MaterialButtonStyle}">
                <Button.Content>
                    <materialDesign:PackIcon Kind="WindowMinimize" />
                </Button.Content>
            </Button>
            <StackPanel  HorizontalAlignment="Left"
                         Orientation="Horizontal">
                <Image Source="pack://application:,,,/Resources/logo.ico"
                       Height="20"
                       Margin="10,0"
                       RenderOptions.BitmapScalingMode="Fant" />
                <TextBlock VerticalAlignment="Center"
                           FontSize="16"
                           Text="CraftHub" />
            </StackPanel>
        </DockPanel>
        <ContentControl x:Name="MainContent">
            <ContentControl.Content>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Menu Grid.Row="0">
                        <MenuItem Header="_File">
                            <MenuItem Header="Upload template"
                                      x:Name="MIImportClass"
                                      Icon="{materialDesign:PackIcon Kind=Upload}" />
                            <MenuItem Header="Import json file"
                                      Icon="{materialDesign:PackIcon Kind=CodeJson}"
                                      x:Name="MIImportJsonFile">
                            </MenuItem>
                            <MenuItem Header="Export json file"
                                      x:Name="MIExportJsonFile"
                                      Icon="{materialDesign:PackIcon Kind=CloudJson}">
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="_Options">
                            <MenuItem Header="Add in modal window"
                                      x:Name="MIAddInModalWindow"
                                      IsChecked="True"
                                      IsCheckable="True" />
                        </MenuItem>
                        <MenuItem Header="_Extension">
                            <MenuItem Header="Generation folders"
                                      x:Name="MIGenerationFolders"
                                      Command="{Binding OpenGenerateFoldersindow}"
                                      Icon="{materialDesign:PackIcon Kind=Folder}">
                            </MenuItem>
                        </MenuItem>
                    </Menu>
                    <!--<ToggleButton materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=MoonAndStars}"
                                  Content="{materialDesign:PackIcon Kind=WeatherSunny}"
                                  ToolTip="MaterialDesignActionLightToggleButton"
                                  WindowChrome.IsHitTestVisibleInChrome="True"
                                  Style="{StaticResource MaterialDesignActionToggleButton}"
                                  HorizontalAlignment="Right"
                                  Margin="10,0" />-->
                    <Frame Content="{Binding MainFrameSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           NavigationUIVisibility="Hidden"
                           Grid.Row="1" />
                </Grid>
            </ContentControl.Content>
        </ContentControl>
    </DockPanel>
</Window>
